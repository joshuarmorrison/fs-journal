(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{499:function(e,t,s){"use strict";s.r(t);var a=s(1),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"promise-meee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-meee"}},[e._v("#")]),e._v(" Promise meee")]),e._v(" "),s("h2",{attrs:{id:"what-are-the-three-states-of-a-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-states-of-a-promise"}},[e._v("#")]),e._v(" What are the three states of a Promise?")]),e._v(" "),s("h3",{attrs:{id:"pending-this-is-the-initial-state-before-the-promise-succeeds-or-fails"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pending-this-is-the-initial-state-before-the-promise-succeeds-or-fails"}},[e._v("#")]),e._v(" Pending (this is the initial state, before the Promise succeeds or fails)")]),e._v(" "),s("h3",{attrs:{id:"resolved-this-is-the-completed-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolved-this-is-the-completed-promise"}},[e._v("#")]),e._v(" Resolved (This is the completed Promise)")]),e._v(" "),s("h3",{attrs:{id:"rejected-this-is-the-failed-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rejected-this-is-the-failed-promise"}},[e._v("#")]),e._v(" Rejected (This is the failed Promise)")]),e._v(" "),s("h2",{attrs:{id:"how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[e._v("#")]),e._v(' How do promises seek to resolve the issues of "callback hell"?')]),e._v(" "),s("h3",{attrs:{id:"they-are-called-only-once-then-have-constructors-within-them-to-continue-the-code-but-get-rid-of-the-callback-hell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#they-are-called-only-once-then-have-constructors-within-them-to-continue-the-code-but-get-rid-of-the-callback-hell"}},[e._v("#")]),e._v(" They are called only once, then have constructors within them to continue the code, but get rid of the callback hell.")]),e._v(" "),s("h2",{attrs:{id:"what-is-the-difference-between-then-and-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-then-and-catch"}},[e._v("#")]),e._v(" What is the difference between .then() and .catch()?")]),e._v(" "),s("h3",{attrs:{id:"then-is-calling-then-success-error-and-promise-then-success"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#then-is-calling-then-success-error-and-promise-then-success"}},[e._v("#")]),e._v(" .then is calling .then(success, error) and promise.then(success)")]),e._v(" "),s("h3",{attrs:{id:"catch-is-catching-catch-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#catch-is-catching-catch-error"}},[e._v("#")]),e._v(" .catch is catching  .catch(error)")])])}),[],!1,null,null,null);t.default=r.exports}}]);