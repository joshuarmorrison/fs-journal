(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{489:function(e,t,a){"use strict";a.r(t);var s=a(1),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-things"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-things"}},[e._v("#")]),e._v(" JavaScript things")]),e._v(" "),a("p",[e._v("https://joshuarmorrison.github.io/js-test/")]),e._v(" "),a("h1",{attrs:{id:"what-is-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope"}},[e._v("#")]),e._v(" What is Scope?")]),e._v(" "),a("h2",{attrs:{id:"scope-is-where-the-variable-is-located"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-is-where-the-variable-is-located"}},[e._v("#")]),e._v(" Scope is where the variable is located")]),e._v(" "),a("h1",{attrs:{id:"what-is-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-hoisting"}},[e._v("#")]),e._v(" What is Hoisting ?")]),e._v(" "),a("h2",{attrs:{id:"hoisting-is-a-javascript-tool-where-variables-and-functions-are-moved-up-before-being-executed-essentially-variables-are-moved-to-the-top-of-its-scope-and-returned-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hoisting-is-a-javascript-tool-where-variables-and-functions-are-moved-up-before-being-executed-essentially-variables-are-moved-to-the-top-of-its-scope-and-returned-undefined"}},[e._v("#")]),e._v(" Hoisting is a JavaScript tool where variables and functions are moved up before being executed. Essentially variables are moved to the top of its scope and returned undefined.")]),e._v(" "),a("h1",{attrs:{id:"in-what-cases-might-you-use-let-vs-const-vs-var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-what-cases-might-you-use-let-vs-const-vs-var"}},[e._v("#")]),e._v(" In what cases might you use let vs const vs var?")]),e._v(" "),a("h2",{attrs:{id:"there-are-many-different-instances-where-you-would-use-any-of-the-3-let-is-a-blocked-scope-where-a-block-is-located-in-curly-brackets-const-variables-maintain-their-constant-meaning-they-cannot-be-re-declared-when-you-want-to-use-one-or-the-other-depends-on-your-code-and-the-use-of-how-you-want-to-utilize-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#there-are-many-different-instances-where-you-would-use-any-of-the-3-let-is-a-blocked-scope-where-a-block-is-located-in-curly-brackets-const-variables-maintain-their-constant-meaning-they-cannot-be-re-declared-when-you-want-to-use-one-or-the-other-depends-on-your-code-and-the-use-of-how-you-want-to-utilize-it"}},[e._v("#")]),e._v(" There are many different instances where you would use any of the 3. Let is a blocked scope where a block is located in curly brackets. Const variables maintain their constant meaning they cannot be re-declared. When you want to use one or the other depends on your code and the use of how you want to utilize it.")])])}),[],!1,null,null,null);t.default=o.exports}}]);